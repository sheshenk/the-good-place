{"version":3,"sources":["views/certifications/index.js"],"names":["BootstrapDialogTitle","props","children","onClose","other","sx","m","fontSize","onClick","position","right","top","color","theme","palette","grey","Certificate","React","useState","open","setOpen","handleClose","fullWidth","maxWidth","id","project","dividers","src","img","alt","height","gutterBottom","hours","level","component","image","variant","href","download","Certifications","certificates","setCertificates","useAuthListener","loggedIn","checkingStatus","useEffect","firebaseSvc","getAllCertificatesFromDb","snap","Object","values","val","certsRefOff","ml","my","container","justifyContent","alignItems","map","cert","to"],"mappings":"oXAiBMA,EAAuB,SAACC,GAC5B,IAAQC,EAAgCD,EAAhCC,SAAUC,EAAsBF,EAAtBE,QAAYC,EAA9B,YAAwCH,EAAxC,GAEA,OACE,eAAC,IAAD,yBAAaI,GAAI,CAAEC,EAAG,EAAGC,SAAU,KAAUH,GAA7C,cACGF,EACAC,EACC,cAAC,IAAD,CACE,aAAW,QACXK,QAASL,EACTE,GAAI,CACFI,SAAU,WACVC,MAAO,EACPC,IAAK,EACLJ,SAAU,GACVK,MAAO,SAACC,GAAD,OAAWA,EAAMC,QAAQC,KAAK,OARzC,SAWE,cAAC,IAAD,MAEA,UAYJC,EAAc,SAAC,GAAa,IAAZf,EAAW,EAAXA,MACpB,EAAwBgB,IAAMC,UAAS,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KAKMC,EAAc,WAClBD,GAAQ,IAIZ,OACE,gCACE,eAAC,IAAD,CACIjB,QAASkB,EACT,kBAAgB,0BAChBF,KAAMA,EACNG,WAAW,EACXC,SAAU,KALd,UAOI,cAACvB,EAAD,CAAsBwB,GAAG,0BAA0BrB,QAASkB,EAA5D,SACGpB,EAAMwB,UAET,eAAC,IAAD,CAAeC,UAAQ,EAAvB,UACA,qBAAKC,IAAK1B,EAAM2B,IAAKC,IAAI,OAAOC,OAAQ,MACtC,eAAC,IAAD,CAAYC,cAAY,EAAxB,gCACsB9B,EAAM+B,SAE5B,eAAC,IAAD,CAAYD,cAAY,EAAxB,mCACyB9B,EAAMgC,eAIrC,eAAC,IAAD,CAAM5B,GAAI,CAAEkB,SAAU,KAAtB,UACE,eAAC,IAAD,CAAgBf,QA/BI,WACtBY,GAAQ,IA8BN,UACE,cAAC,IAAD,CACEc,UAAU,MACVJ,OAAO,MACPK,MAAOlC,EAAM2B,IACbC,IAAI,gBAEN,eAAC,IAAD,WACE,cAAC,IAAD,CAAYE,cAAY,EAACK,QAAQ,KAAKF,UAAU,MAAhD,SACGjC,EAAMwB,UAET,eAAC,IAAD,CAAYW,QAAQ,QAAQxB,MAAM,eAAlC,gCACsBX,EAAM+B,SAE5B,eAAC,IAAD,CAAYI,QAAQ,QAAQxB,MAAM,eAAlC,mCACyBX,EAAMgC,eAInC,eAAC,IAAD,WACI,cAAC,IAAD,CAAY,aAAW,QAAvB,SACE,cAAC,IAAD,MAEF,cAAC,IAAD,CAAY,aAAW,WAAvB,SACE,mBAAGI,KAAMpC,EAAM2B,IAAKU,UAAQ,EAA5B,SACE,cAAC,IAAD,kBAgDCC,UArCQ,WACrB,MAAwCrB,mBAAS,IAAjD,mBAAOsB,EAAP,KAAqBC,EAArB,KACA,EAAqCC,cAA7BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,eAalB,OAVAC,qBAAU,WACRC,IAAYC,0BACV,SAACC,GACC,IAAMR,EAAeS,OAAOC,OAAOF,EAAKG,OAExC,OADAV,EAAgBD,GACT,kBAAMM,IAAYM,oBAG5B,IAECR,EAAuB,cAAC,IAAD,IAEtBD,EAGH,eAAC,IAAD,WACE,cAAC,IAAD,CAAYP,QAAQ,KAAKF,UAAU,MAAMmB,GAAI,EAAGC,GAAI,EAAGvB,cAAY,EAAnE,+BAGF,cAAC,IAAD,CAAMwB,WAAS,EAACC,eAAe,eAAeC,WAAW,SAAzD,SAEIjB,EAAakB,KAAI,SAAAC,GAAI,OACnB,cAAC3C,EAAD,CAAaf,MAAO0D,YAVN,cAAC,IAAD,CAAUC,GAAG","file":"static/js/11.d4a085a3.chunk.js","sourcesContent":["// material-ui\nimport { CircularProgress, Container, Typography } from '@mui/material';\nimport React, {useEffect, useState} from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport { CardActionArea, CardActions, Grid, IconButton } from '@mui/material';\nimport firebaseSvc, { useAuthListener } from 'views/firebaseAuth/firebaseSvc';\nimport { ShareOutlined, FileDownload } from '@mui/icons-material';\nimport { Navigate } from 'react-router';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport CloseIcon from '@mui/icons-material/Close';\nimport PropTypes from 'prop-types';\n\n\nconst BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, fontSize: 24 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            fontSize: 34,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n\n\n\nconst Certificate = ({props}) => {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\nreturn (\n  <div>\n    <Dialog\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n        fullWidth={true}\n        maxWidth={'md'}\n      >\n        <BootstrapDialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          {props.project}\n        </BootstrapDialogTitle>\n        <DialogContent dividers>\n        <img src={props.img} alt=\"cert\" height={600}/>\n          <Typography gutterBottom>\n            Hours Contributed: {props.hours}\n          </Typography>\n          <Typography gutterBottom>\n            Level of Achievement: {props.level}\n          </Typography>\n        </DialogContent>\n      </Dialog>\n    <Card sx={{ maxWidth: 345}}>\n      <CardActionArea onClick={handleClickOpen}>\n        <CardMedia\n          component=\"img\"\n          height=\"194\"\n          image={props.img}\n          alt=\"certificate\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"div\">\n            {props.project}\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.primary\">\n            Hours Contributed: {props.hours}\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.primary\">\n            Level of Achievement: {props.level}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n          <IconButton aria-label=\"share\">\n            <ShareOutlined />\n          </IconButton>\n          <IconButton aria-label=\"download\">\n            <a href={props.img} download>\n              <FileDownload />\n            </a>\n          </IconButton>\n      </CardActions>\n    </Card>\n    </div>\n\n\n);\n}\n\nconst Certifications = () => {\n  const [certificates, setCertificates] = useState([]);\n  const { loggedIn, checkingStatus } = useAuthListener();\n\n\n  useEffect(() => {\n    firebaseSvc.getAllCertificatesFromDb(\n      (snap) => {\n        const certificates = Object.values(snap.val());\n        setCertificates(certificates);\n        return () => firebaseSvc.certsRefOff();\n      }\n    );\n  }, []);\n\n  if (checkingStatus) return <CircularProgress/>\n\n  if (!loggedIn) return <Navigate to='/login' />\n\n  return (\n    <Container>\n      <Typography variant=\"h1\" component=\"div\" ml={2} my={3} gutterBottom>\n        Your Certificates\n      </Typography>\n    <Grid container justifyContent=\"space-evenly\" alignItems=\"center\">\n      {\n        certificates.map(cert => (\n          <Certificate props={cert}>\n          </Certificate>\n        ))\n      }\n    </Grid>\n\n    </Container>\n    \n  );\n};\nexport default Certifications;"],"sourceRoot":""}