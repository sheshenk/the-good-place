{"version":3,"sources":["ui-component/cards/Skeleton/TotalHoursCard.js","views/dashboard/Default/TotalHoursCard.js","ui-component/cards/Skeleton/TotalGrowthBarChart.js","views/dashboard/Default/chart-data/total-growth-bar-chart.js","views/dashboard/Default/TotalGrowthBarChart.js","views/dashboard/Default/index.js"],"names":["SkeletonTotalHoursCard","Card","CardContent","Grid","container","direction","item","justifyContent","Skeleton","variant","width","height","sx","my","CardWrapper","styled","MainCard","theme","backgroundColor","palette","secondary","dark","color","overflow","position","content","background","borderRadius","top","right","breakpoints","down","opacity","TotalHoursCard","isLoading","useTheme","useState","anchorEl","setAnchorEl","handleClose","hours","setHours","useEffect","getHours","a","firebaseSvc","snapshot","val","border","Box","p","Menu","id","keepMounted","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","onClick","mr","alignItems","Typography","fontSize","fontWeight","mt","mb","Avatar","cursor","typography","smallAvatar","transform","TotalGrowthBarChart","spacing","gridSpacing","xs","zeroMinWidth","chartData","type","options","chart","stacked","toolbar","show","zoom","enabled","responsive","breakpoint","legend","offsetX","offsetY","plotOptions","bar","columnWidth","xaxis","categories","fontFamily","labels","useSeriesColors","markers","radius","itemMargin","fill","dataLabels","grid","series","name","data","status","value","label","setValue","navType","useSelector","state","customization","primary","text","darkLight","light","grey200","grey","grey500","primary200","primaryDark","secondaryMain","main","secondaryLight","newChartData","colors","style","yaxis","borderColor","tooltip","ApexCharts","exec","TextField","select","onChange","e","target","map","option","Dashboard","setLoading","useAuthListener","loggedIn","checkingStatus","CircularProgress","lg","md","sm","to"],"mappings":"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","file":"static/js/12.a3e3713e.chunk.js","sourcesContent":["// material-ui\nimport { Card, CardContent, Grid } from '@mui/material';\nimport Skeleton from '@mui/material/Skeleton';\n\n// ==============================|| SKELETON - EARNING CARD ||============================== //\n\nconst SkeletonTotalHoursCard = () => (\n    <Card>\n        <CardContent>\n            <Grid container direction=\"column\">\n                <Grid item>\n                    <Grid container justifyContent=\"space-between\">\n                        <Grid item>\n                            <Skeleton variant=\"rectangular\" width={44} height={44} />\n                        </Grid>\n                        <Grid item>\n                            <Skeleton variant=\"rectangular\" width={34} height={34} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <Skeleton variant=\"rectangular\" sx={{ my: 2 }} height={40} />\n                </Grid>\n                <Grid item>\n                    <Skeleton variant=\"rectangular\" height={30} />\n                </Grid>\n            </Grid>\n        </CardContent>\n    </Card>\n);\n\nexport default SkeletonTotalHoursCard;\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\n\n// material-ui\nimport { styled, useTheme } from '@mui/material/styles';\nimport { Avatar, Box, Grid, Menu, MenuItem, Typography } from '@mui/material';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport SkeletonTotalHoursCard from 'ui-component/cards/Skeleton/TotalHoursCard';\n\n// assets\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport GetAppTwoToneIcon from '@mui/icons-material/GetAppOutlined';\nimport FileCopyTwoToneIcon from '@mui/icons-material/FileCopyOutlined';\nimport PictureAsPdfTwoToneIcon from '@mui/icons-material/PictureAsPdfOutlined';\nimport ArchiveTwoToneIcon from '@mui/icons-material/ArchiveOutlined';\nimport firebaseSvc from 'views/firebaseAuth/firebaseSvc';\n\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n    backgroundColor: theme.palette.secondary.dark,\n    color: '#fff',\n    overflow: 'hidden',\n    position: 'relative',\n    '&:after': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: theme.palette.secondary[800],\n        borderRadius: '50%',\n        top: -85,\n        right: -95,\n        [theme.breakpoints.down('sm')]: {\n            top: -105,\n            right: -140\n        }\n    },\n    '&:before': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: theme.palette.secondary[800],\n        borderRadius: '50%',\n        top: -125,\n        right: -15,\n        opacity: 0.5,\n        [theme.breakpoints.down('sm')]: {\n            top: -155,\n            right: -70\n        }\n    }\n}));\n\n// ===========================|| DASHBOARD DEFAULT - EARNING CARD ||=========================== //\n\nconst TotalHoursCard = ({ isLoading }) => {\n    const theme = useTheme();\n\n    const [anchorEl, setAnchorEl] = useState(null);\n\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const [hours, setHours] = useState(0)\n\n    useEffect(() => {\n        const getHours = async () => {\n            await firebaseSvc.getHours((snapshot) => {\n                let hours = snapshot.val()\n                setHours(hours)\n            })\n        }\n        getHours()\n    }, [])\n\n\n    return (\n        <>\n            {isLoading ? (\n                <SkeletonTotalHoursCard />\n            ) : (\n                <CardWrapper border={false} content={false}>\n                    <Box sx={{ p: 2.25 }}>\n                        <Grid container direction=\"column\">\n                            <Grid item>\n                                <Grid container justifyContent=\"space-between\">\n                                    <Grid item>\n                                        <Menu\n                                            id=\"menu-earning-card\"\n                                            anchorEl={anchorEl}\n                                            keepMounted\n                                            open={Boolean(anchorEl)}\n                                            onClose={handleClose}\n                                            variant=\"selectedMenu\"\n                                            anchorOrigin={{\n                                                vertical: 'bottom',\n                                                horizontal: 'right'\n                                            }}\n                                            transformOrigin={{\n                                                vertical: 'top',\n                                                horizontal: 'right'\n                                            }}\n                                        >\n                                            <MenuItem onClick={handleClose}>\n                                                <GetAppTwoToneIcon sx={{ mr: 1.75 }} /> Import Card\n                                            </MenuItem>\n                                            <MenuItem onClick={handleClose}>\n                                                <FileCopyTwoToneIcon sx={{ mr: 1.75 }} /> Copy Data\n                                            </MenuItem>\n                                            <MenuItem onClick={handleClose}>\n                                                <PictureAsPdfTwoToneIcon sx={{ mr: 1.75 }} /> Export\n                                            </MenuItem>\n                                            <MenuItem onClick={handleClose}>\n                                                <ArchiveTwoToneIcon sx={{ mr: 1.75 }} /> Archive File\n                                            </MenuItem>\n                                        </Menu>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                                <Grid container alignItems=\"center\">\n                                    <Grid item>\n                                        <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\n                                            {hours}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <Avatar\n                                            sx={{\n                                                cursor: 'pointer',\n                                                ...theme.typography.smallAvatar,\n                                                backgroundColor: theme.palette.secondary[200],\n                                                color: theme.palette.secondary.dark\n                                            }}\n                                        >\n                                            <ArrowUpwardIcon fontSize=\"inherit\" sx={{ transform: 'rotate3d(1, 1, 1, 45deg)' }} />\n                                        </Avatar>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item sx={{ mb: 1.25 }}>\n                                <Typography\n                                    sx={{\n                                        fontSize: '1rem',\n                                        fontWeight: 500,\n                                        color: theme.palette.secondary[200]\n                                    }}\n                                >\n                                    Total Hours Worked\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </CardWrapper>\n            )}\n        </>\n    );\n};\n\nTotalHoursCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalHoursCard;\n","// material-ui\nimport { Card, CardContent, Grid } from '@mui/material';\nimport Skeleton from '@mui/material/Skeleton';\n\n// project imports\nimport { gridSpacing } from 'store/constant';\n\n// ==============================|| SKELETON TOTAL GROWTH BAR CHART ||============================== //\n\nconst TotalGrowthBarChart = () => (\n    <Card>\n        <CardContent>\n            <Grid container spacing={gridSpacing}>\n                <Grid item xs={12}>\n                    <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\n                        <Grid item xs zeroMinWidth>\n                            <Grid container spacing={1}>\n                                <Grid item xs={12}>\n                                    <Skeleton variant=\"text\" />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <Skeleton variant=\"rectangular\" height={20} />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item>\n                            <Skeleton variant=\"rectangular\" height={50} width={80} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Skeleton variant=\"rectangular\" height={530} />\n                </Grid>\n            </Grid>\n        </CardContent>\n    </Card>\n);\n\nexport default TotalGrowthBarChart;\n","// ===========================|| DASHBOARD - TOTAL GROWTH BAR CHART ||=========================== //\n\nconst chartData = {\n    height: 480,\n    type: 'bar',\n    options: {\n        chart: {\n            id: 'bar-chart',\n            stacked: true,\n            toolbar: {\n                show: true\n            },\n            zoom: {\n                enabled: true\n            }\n        },\n        responsive: [\n            {\n                breakpoint: 480,\n                options: {\n                    legend: {\n                        position: 'bottom',\n                        offsetX: -10,\n                        offsetY: 0\n                    }\n                }\n            }\n        ],\n        plotOptions: {\n            bar: {\n                horizontal: false,\n                columnWidth: '50%'\n            }\n        },\n        xaxis: {\n            type: 'category',\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n        },\n        legend: {\n            show: true,\n            fontSize: '14px',\n            fontFamily: `'Roboto', sans-serif`,\n            position: 'bottom',\n            offsetX: 20,\n            labels: {\n                useSeriesColors: false\n            },\n            markers: {\n                width: 16,\n                height: 16,\n                radius: 5\n            },\n            itemMargin: {\n                horizontal: 15,\n                vertical: 8\n            }\n        },\n        fill: {\n            type: 'solid'\n        },\n        dataLabels: {\n            enabled: false\n        },\n        grid: {\n            show: true\n        }\n    },\n    series: [\n        {\n            name: 'Investment',\n            data: [35, 125, 35, 35, 35, 80, 35, 20, 35, 45, 15, 75]\n        },\n        {\n            name: 'Loss',\n            data: [35, 15, 15, 35, 65, 40, 80, 25, 15, 85, 25, 75]\n        },\n        {\n            name: 'Profit',\n            data: [35, 145, 35, 35, 20, 105, 100, 10, 65, 45, 30, 10]\n        },\n        {\n            name: 'Maintenance',\n            data: [0, 0, 75, 0, 0, 115, 0, 0, 0, 0, 150, 0]\n        }\n    ]\n};\nexport default chartData;\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Grid, MenuItem, TextField, Typography } from '@mui/material';\n\n// third-party\nimport ApexCharts from 'apexcharts';\nimport Chart from 'react-apexcharts';\n\n// project imports\nimport SkeletonTotalGrowthBarChart from 'ui-component/cards/Skeleton/TotalGrowthBarChart';\nimport MainCard from 'ui-component/cards/MainCard';\nimport { gridSpacing } from 'store/constant';\n\n// chart data\nimport chartData from './chart-data/total-growth-bar-chart';\n\nconst status = [\n    {\n        value: 'today',\n        label: 'Today'\n    },\n    {\n        value: 'month',\n        label: 'This Month'\n    },\n    {\n        value: 'year',\n        label: 'This Year'\n    }\n];\n\n// ==============================|| DASHBOARD DEFAULT - TOTAL GROWTH BAR CHART ||============================== //\n\nconst TotalGrowthBarChart = ({ isLoading }) => {\n    const [value, setValue] = useState('today');\n    const theme = useTheme();\n    const customization = useSelector((state) => state.customization);\n\n    const { navType } = customization;\n    const { primary } = theme.palette.text;\n    const darkLight = theme.palette.dark.light;\n    const grey200 = theme.palette.grey[200];\n    const grey500 = theme.palette.grey[500];\n\n    const primary200 = theme.palette.primary[200];\n    const primaryDark = theme.palette.primary.dark;\n    const secondaryMain = theme.palette.secondary.main;\n    const secondaryLight = theme.palette.secondary.light;\n\n    useEffect(() => {\n        const newChartData = {\n            ...chartData.options,\n            colors: [primary200, primaryDark, secondaryMain, secondaryLight],\n            xaxis: {\n                labels: {\n                    style: {\n                        colors: [primary, primary, primary, primary, primary, primary, primary, primary, primary, primary, primary, primary]\n                    }\n                }\n            },\n            yaxis: {\n                labels: {\n                    style: {\n                        colors: [primary]\n                    }\n                }\n            },\n            grid: {\n                borderColor: grey200\n            },\n            tooltip: {\n                theme: 'light'\n            },\n            legend: {\n                labels: {\n                    colors: grey500\n                }\n            }\n        };\n\n        // do not load chart when loading\n        if (!isLoading) {\n            ApexCharts.exec(`bar-chart`, 'updateOptions', newChartData);\n        }\n    }, [navType, primary200, primaryDark, secondaryMain, secondaryLight, primary, darkLight, grey200, isLoading, grey500]);\n\n    return (\n        <>\n            {isLoading ? (\n                <SkeletonTotalGrowthBarChart />\n            ) : (\n                <MainCard>\n                    <Grid container spacing={gridSpacing}>\n                        <Grid item xs={12}>\n                            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                <Grid item>\n                                    <Grid container direction=\"column\" spacing={1}>\n                                        <Grid item>\n                                            <Typography variant=\"subtitle2\">Points by Month</Typography>\n                                        </Grid>\n                                        <Grid item>\n                                            <Typography variant=\"h3\">$2,324.00</Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Grid item>\n                                    <TextField\n                                        id=\"standard-select-currency\"\n                                        select\n                                        value={value}\n                                        onChange={(e) => setValue(e.target.value)}\n                                    >\n                                        {status.map((option) => (\n                                            <MenuItem key={option.value} value={option.value}>\n                                                {option.label}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Chart {...chartData} />\n                        </Grid>\n                    </Grid>\n                </MainCard>\n            )}\n        </>\n    );\n};\n\nTotalGrowthBarChart.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalGrowthBarChart;\n","import { useEffect, useState } from 'react';\n\n// material-ui\nimport { Grid, CircularProgress } from '@mui/material';\n\n// project imports\nimport TotalHoursCard from './TotalHoursCard';\nimport TotalGrowthBarChart from './TotalGrowthBarChart';\nimport { gridSpacing } from 'store/constant';\nimport { useAuthListener } from 'views/firebaseAuth/firebaseSvc';\nimport { Navigate } from 'react-router';\n\n// ==============================|| DEFAULT DASHBOARD ||============================== //\n\nconst Dashboard = () => {\n    const [isLoading, setLoading] = useState(true);\n    useEffect(() => {\n        setLoading(false);\n    }, []);\n\n    const { loggedIn, checkingStatus } = useAuthListener();\n\n    if (checkingStatus) return <CircularProgress/>\n\n    if (!loggedIn) return <Navigate to='/login'/>\n\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={6}>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item lg={12} md={12} sm={12} xs={12}>\n                        <TotalHoursCard isLoading={isLoading} />\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12} md={12}>\n                        <TotalGrowthBarChart isLoading={isLoading} />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Dashboard;\n"],"sourceRoot":""}