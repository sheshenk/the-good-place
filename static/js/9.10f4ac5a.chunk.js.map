{"version":3,"sources":["views/pages/authentication/AuthWrapper1.js","views/pages/authentication/AuthCardWrapper.js","utils/password-strength.js","views/pages/authentication/FirebaseRegister.js","views/pages/register.js"],"names":["AuthWrapper1","styled","backgroundColor","theme","palette","primary","light","minHeight","AuthCardWrapper","children","other","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","p","sm","xl","strengthIndicator","number","strengths","length","RegExp","test","hasNumber","hasSpecial","hasMixed","FirebaseRegister","useState","checked","setChecked","errorMsg","setErrorMsg","email","setEmail","username","setUsername","password","setPassword","strength","setStrength","level","setLevel","skills","setSkills","setOther","preferences","setPrefs","changePassword","value","count","temp","label","color","errorMain","warningDark","orangeMain","successMain","successDark","addNameAndDetails","name","otherSkill","prefs","firebaseSvc","addUserName","console","log","user","hours","forEach","skill","pref","addUserToDb","registerSuccess","registerFailure","handleRegister","a","createUser","matchProjectCurrentUser","window","location","href","err","message","code","error","useEffect","Grid","container","direction","justifyContent","spacing","item","Box","alignItems","display","Divider","orientation","mb","Typography","variant","noValidate","autoComplete","onSubmit","e","preventDefault","TextField","id","onChange","event","target","style","width","type","FormControl","fullWidth","ml","height","borderRadius","fontSize","mt","Select","multiple","split","renderValue","selected","join","input","OutlinedInput","skillList","map","skillName","MenuItem","Checkbox","indexOf","ListItemText","marginBottom","prefList","Button","size","Register","useTheme","matchDownSM","useMediaQuery","breakpoints","down","m","to","Logo","Stack","secondary","main","gutterBottom","textAlign","component","Link","textDecoration"],"mappings":"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","file":"static/js/9.10f4ac5a.chunk.js","sourcesContent":["// material-ui\nimport { styled } from '@mui/material/styles';\n\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\n\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\n    backgroundColor: theme.palette.primary.light,\n    minHeight: '100vh'\n}));\n\nexport default AuthWrapper1;","import PropTypes from 'prop-types';\n\n// material-ui\nimport { Box } from '@mui/material';\n\n// project import\nimport MainCard from 'ui-component/cards/MainCard';\n\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\n\nconst AuthCardWrapper = ({ children, ...other }) => (\n    <MainCard\n        sx={{\n            maxWidth: { xs: 400, lg: 475 },\n            margin: { xs: 2.5, md: 3 },\n            '& > *': {\n                flexGrow: 1,\n                flexBasis: '50%'\n            }\n        }}\n        content={false}\n        {...other}\n    >\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\n    </MainCard>\n);\n\nAuthCardWrapper.propTypes = {\n    children: PropTypes.node\n};\n\nexport default AuthCardWrapper;","/**\n * Password validator for login pages\n */\nimport value from 'css/_themes-vars.module.scss';\n\n// has number\nconst hasNumber = (number) => new RegExp(/[0-9]/).test(number);\n\n// has mix of small and capitals\nconst hasMixed = (number) => new RegExp(/[a-z]/).test(number) && new RegExp(/[A-Z]/).test(number);\n\n// has special chars\nconst hasSpecial = (number) => new RegExp(/[!#@$%^&*)(+=._-]/).test(number);\n\n// set color based on password strength\nexport const strengthColor = (count) => {\n    if (count < 2) return { label: 'Poor', color: value.errorMain };\n    if (count < 3) return { label: 'Weak', color: value.warningDark };\n    if (count < 4) return { label: 'Normal', color: value.orangeMain };\n    if (count < 5) return { label: 'Good', color: value.successMain };\n    if (count < 6) return { label: 'Strong', color: value.successDark };\n    return { label: 'Poor', color: value.errorMain };\n};\n\n// password strength indicator\nexport const strengthIndicator = (number) => {\n    let strengths = 0;\n    if (number.length > 5) strengths += 1;\n    if (number.length > 7) strengths += 1;\n    if (hasNumber(number)) strengths += 1;\n    if (hasSpecial(number)) strengths += 1;\n    if (hasMixed(number)) strengths += 1;\n    return strengths;\n};\n","import { useState, useEffect } from 'react';\n\n// material-ui\nimport {\n    Box,\n    Button,\n    Checkbox,\n    Divider,\n    FormControl,\n    Grid,\n    ListItemText,\n    MenuItem,\n    OutlinedInput,\n    Select,\n    TextField,\n    Typography\n} from '@mui/material';\n\n// project imports\nimport { strengthColor, strengthIndicator } from 'utils/password-strength';\n\n// assets\nimport firebaseSvc from 'views/firebaseAuth/firebaseSvc';\nimport { skillList, prefList } from 'views/utilities/Constants';\n\n// ===========================|| FIREBASE - REGISTER ||=========================== //\n\nconst FirebaseRegister = ({ ...others }) => {\n    const [checked, setChecked] = useState(true);\n    const [errorMsg, setErrorMsg] = useState('');\n    const [email, setEmail] = useState('');\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [strength, setStrength] = useState(0);\n    const [level, setLevel] = useState();\n    const [skills, setSkills] = useState([]);// List of all chosen skills\n    const [other, setOther] = useState('');// Other Skills they possess\n    const [preferences, setPrefs] = useState([]);//Project Preference\n\n    const changePassword = (value) => {\n        const temp = strengthIndicator(value);\n        setStrength(temp);\n        setLevel(strengthColor(temp));\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (username && email && password) {\n            handleRegister(username, email, password, skills, other, preferences);\n        } else {\n            // Either Name or Email or Password is missing\n            setChecked(false);\n            setErrorMsg(\"All fields are required!\");\n        }\n    };\n\n    const addNameAndDetails = (name, skills, otherSkill, prefs) => () => firebaseSvc.addUserName(name, () => {\n        console.log(\"User Name Added\");\n        let user = {\n            name: name,\n            email: email,\n            hours: 0\n        };\n        user[\"otherSkill\"] = otherSkill;\n        skills.forEach(skill => user[skill] = true);\n        prefs.forEach(pref => user[pref] = true);\n        firebaseSvc.addUserToDb(user, registerSuccess(user), registerFailure);\n    },\n    registerFailure);\n\n    const handleRegister = async (name, email, password, skills, otherSkill, prefs) => {\n        await firebaseSvc.createUser({email: email, password: password}, addNameAndDetails(name, skills, otherSkill, prefs), registerFailure);\n    };\n\n    /**\n     * Callback Function if the register is successful.\n     */\n    const registerSuccess = (user) => () => {\n        console.log(\"Account successfully created!\");\n        firebaseSvc.matchProjectCurrentUser(user);\n        window.location.href = \"/\";\n    };\n\n    /**\n     * Callback function if the register is unsuccessful.\n     * \n     * @param {*} err The Error Object with structure\n     * {\n     *      code: Error Code,\n     *      message: Error Description\n     * }\n     */\n     const registerFailure = (err) => {\n        const code = err.code;\n        let message = '';\n        switch(code) {\n            case \"auth/invalid-email\": message = \"Invalid Email!\";\n            break;\n            case \"auth/email-already-in-use\": message = \"This Email already has an account\";\n            break;\n            default: message = \"Sign Up unsuccessful, try again\";\n            break;\n        }\n        \n        setErrorMsg(message);\n        setChecked(false);\n        console.error(err.code, err.message);\n    };\n\n    const handleSkillsChange = (event) => {\n        const {\n          target: { value },\n        } = event;\n        setSkills(\n          // On autofill we get a stringified value.\n          typeof value === 'string' ? value.split(',') : value,\n        );\n      };\n\n      const handlePrefsChange = (event) => {\n        const {\n          target: { value },\n        } = event;\n        setPrefs(\n          // On autofill we get a stringified value.\n          typeof value === 'string' ? value.split(',') : value,\n        );\n      };\n\n    useEffect(() => {\n        changePassword('123456');\n    }, []);\n\n    return (\n        <>\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <Box sx={{ alignItems: 'center', display: 'flex' }}>\n                        <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\n                        <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\n                    </Box>\n                </Grid>\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\n                    <Box sx={{ mb: 2 }}>\n                        <Typography variant=\"subtitle1\">Sign up with Email address</Typography>\n                    </Box>\n                </Grid>\n                {!checked && \n                    <Typography variant=\"subtitle2\">\n                        {\n                            errorMsg\n                        }\n                    </Typography>\n                }\n                <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n                    <center>\n                    <TextField\n                    id=\"register-name\"\n                    label=\"Name\"\n                    variant=\"outlined\"\n                    onChange={(event) => setUsername(event.target.value)}\n                    style={{width:'80%', margin: 10}}\n                    />\n                    <TextField\n                    id=\"register-email\"\n                    label=\"Email Address\"\n                    variant=\"outlined\"\n                    type=\"email\"\n                    onChange={(event) => setEmail(event.target.value)}\n                    style={{width:'80%', margin: 10}}\n                    />\n                    <TextField\n                    id=\"register-password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    variant=\"outlined\"\n                    style={{width:'80%', margin: 10}}\n                    onChange={(event) => {\n                        changePassword(event.target.value);\n                        setPassword(event.target.value);\n                        }}\n                    />\n                    {/* Password Strength Checker */}\n                    {strength !== 0 && (\n                                <FormControl fullWidth>\n                                    <Box sx={{ mb: 2, ml: 33 }}>\n                                        <Grid container spacing={2} alignItems=\"center\">\n                                            <Grid item>\n                                                <Box\n                                                    style={{ backgroundColor: level?.color }}\n                                                    sx={{ width: 85, height: 8, borderRadius: '7px' }}\n                                                />\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography variant=\"subtitle1\" fontSize=\"0.75rem\">\n                                                    {level?.label}\n                                                </Typography>\n                                            </Grid>\n                                        </Grid>\n                                    </Box>\n                                </FormControl>\n                    )}\n                    <Divider/>\n                    <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\n                        <Box sx={{ mb: 2, mt: 2 }}>\n                            <Typography variant=\"subtitle1\">Share what you're great at!</Typography>\n                        </Box>\n                    </Grid>\n                    <Select\n                        id=\"register-skills\"\n                        multiple\n                        label=\"Skills\"\n                        value={skills}\n                        onChange={handleSkillsChange}\n                        renderValue={(selected) => selected.join(', ')}\n                        input={<OutlinedInput label=\"Skills\"/>}\n                        style={{width:'70%', margin: 10}}\n                    >\n                        {skillList.map((skillName) => (\n                            <MenuItem\n                                key={skillName}\n                                value={skillName}>\n                                <Checkbox checked={skills.indexOf(skillName) > -1} />\n                                <ListItemText primary={skillName} />\n                            </MenuItem>\n                        ))}\n                    </Select>\n                    <TextField\n                        id='register-otherskills'\n                        label=\"Other Skills to Share\"\n                        type='text'\n                        variant='outlined'\n                        style={{width:'70%', margin: 10, marginBottom: 20}}\n                        onChange={(event) => {\n                            setOther(event.target.value);\n                        }}\n                    />\n                    <Divider/>\n                    <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\n                        <Box sx={{ mb: 2, mt: 2 }}>\n                            <Typography variant=\"subtitle1\">Project Working Preferences</Typography>\n                        </Box>\n                    </Grid>\n                    <Select\n                        id=\"register-preference\"\n                        multiple\n                        value={preferences}\n                        onChange={handlePrefsChange}\n                        renderValue={(selected) => selected.join(', ')}\n                        input={<OutlinedInput label=\"Preferences\"/>}\n                        style={{width:'70%', margin: 10, marginBottom: 20}}\n                        \n                    >\n                        {prefList.map((pref) => (\n                            <MenuItem\n                                key={pref}\n                                value={pref}>\n                                <Checkbox checked={preferences.indexOf(pref) > -1} />\n                                <ListItemText primary={pref} />\n                            </MenuItem>\n                        ))}\n                    </Select>\n                    <Divider/>\n                    <Button\n                    color='inherit'\n                    size = 'large'\n                    sx = {{\n                        \n                        margin: '2%',\n                        mt: 3,\n                        height: 50,\n                        width:`35%`\n                    }}\n                    variant = 'outlined'\n                    type = 'submit'\n                    >\n                        Sign Up\n                    </Button>\n                    </center>\n                </form>\n            </Grid>\n\n        </>\n    );\n};\n\nexport default FirebaseRegister;","import { Link } from 'react-router-dom';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@mui/material';\n\n// project imports\nimport AuthWrapper1 from './authentication/AuthWrapper1';\nimport AuthCardWrapper from './authentication/AuthCardWrapper';\nimport Logo from 'ui-component/Logo';\nimport FirebaseRegister from './authentication/FirebaseRegister';\n\n// assets\n\n// ===============================|| AUTH3 - REGISTER ||=============================== //\n\nconst Register = () => {\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n\n    return (\n        <AuthWrapper1>\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\n                <Grid item xs={12}>\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                            <AuthCardWrapper>\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                                    <Grid item sx={{ mb: 3 }}>\n                                        <Link to=\"#\">\n                                            <Logo />\n                                        </Link>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            container\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\"\n                                        >\n                                            <Grid item>\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                                                    <Typography\n                                                        color={theme.palette.secondary.main}\n                                                        gutterBottom\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\n                                                    >\n                                                        Sign up\n                                                    </Typography>\n                                                    <Typography\n                                                        variant=\"caption\"\n                                                        fontSize=\"16px\"\n                                                        textAlign={matchDownSM ? 'center' : 'inherit'}\n                                                    >\n                                                        Fill in your details!\n                                                    </Typography>\n                                                    <Typography\n                                                        variant=\"caption\"\n                                                        fontSize=\"16px\"\n                                                        textAlign={matchDownSM ? 'center' : 'inherit'}\n                                                    >\n                                                         (We'll only to use them to match with projects)\n                                                    </Typography>\n                                                </Stack>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <FirebaseRegister/>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Divider />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                                            <Typography\n                                                component={Link}\n                                                to=\"/login\"\n                                                variant=\"subtitle1\"\n                                                sx={{ textDecoration: 'none' }}\n                                            >\n                                                Already have an account?\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </AuthCardWrapper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </AuthWrapper1>\n    );\n};\n\nexport default Register;"],"sourceRoot":""}